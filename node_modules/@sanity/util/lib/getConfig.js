"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _merge2 = _interopRequireDefault(require("lodash/merge"));

var _get2 = _interopRequireDefault(require("lodash/get"));

var path = _interopRequireWildcard(require("path"));

var _safeJson = require("./safeJson");

var _reduceConfig = _interopRequireDefault(require("./reduceConfig"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaults = {
  server: {
    staticPath: './static',
    port: 3333,
    hostname: 'localhost'
  }
};

var configContainer = values => ({
  get: (dotPath, defaultValue) => (0, _get2.default)(values, dotPath, defaultValue)
});

var getConfig = rootDir => {
  var localConfig = rootDir && (0, _safeJson.loadJsonSync)(path.join(rootDir, 'sanity.json'));
  var config = (0, _reduceConfig.default)(localConfig ? (0, _merge2.default)({}, defaults, localConfig) : defaults, process.env.NODE_ENV || 'development' // eslint-disable-line no-process-env
  );
  return configContainer(config);
};

var _default = getConfig;
exports.default = _default;