import { Doc, Mut } from './types';
declare type MutationParams = {
    transactionId?: string;
    transition?: string;
    identity?: string;
    previousRev?: string;
    resultRev?: string;
    mutations: Array<Mut>;
    timestamp?: String;
};
export default class Mutation {
    params: MutationParams;
    compiled: Function;
    _appliesToMissingDocument: boolean;
    constructor(options: MutationParams);
    readonly transactionId: string;
    readonly transition: string;
    readonly identity: string;
    readonly previousRev: string;
    readonly resultRev: string;
    readonly mutations: Array<Mut>;
    readonly timestamp: Date;
    assignRandomTransactionId(): void;
    appliesToMissingDocument(): boolean;
    compile(): void;
    apply(document: Doc): Doc;
    static applyAll(document: Doc, mutations: Array<Mutation>): Doc;
    static squash(document: Doc, mutations: Array<Mutation>): Mutation;
}
export {};
